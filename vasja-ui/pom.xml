<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>vasja</artifactId>
        <groupId>org.sanjosedelamazonas</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>vasja-ui</artifactId>
    <name>vasja-ui</name>
    <packaging>war</packaging>

    <dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>		
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring-boot-starter</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
		    <groupId>com.microsoft.sqlserver</groupId>
		    <artifactId>sqljdbc4</artifactId>
		    <version>4.0</version>
		</dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-server</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-push</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-themes</artifactId>
        </dependency>
	
		<dependency>
		    <groupId>com.vaadin</groupId>
		    <artifactId>vaadin-spring</artifactId>        
		</dependency>

        <!--VAADIN Add-Ons-->

        <!--        <dependency>
                    <groupId>org.vaadin.addons</groupId>
                    <artifactId>maskedtextfield</artifactId>
                    <version>0.2.0</version>
                </dependency>-->

        <dependency>
            <groupId>de.steinwedel.vaadin.addon</groupId>
            <artifactId>messagebox</artifactId>
            <version>3.0.18</version>
        </dependency>

        <dependency>
            <groupId>tm.kod</groupId>
            <artifactId>numberfield7</artifactId>
            <version>0.0.6</version>
        </dependency>



        <dependency>
            <groupId>org.sanjose</groupId>
            <artifactId>printapplet-addon</artifactId>
            <version>0.0.5</version>
        </dependency>


        <!--        <dependency>
                    <groupId>org.vaadin.ui</groupId>
                    <artifactId>NumberField</artifactId>
                    <version>0.1.8-SNAPSHOT</version>
                    &lt;!&ndash;<version>0.1.6</version>&ndash;&gt;
                </dependency>-->

        <!--        <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>vasja-backend</artifactId>
                    <version>${project.version}</version>
                </dependency>
        -->
        <!-- Custom components -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>vasja-widgetset</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Bean validation implementation -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.2.4.Final</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <!-- By attaching the classes to a separate JAR, we can 
                        import them directly in the production overlay project, making it easier 
                        to compile a separate widgetset for production mode. -->
                    <attachClasses>true</attachClasses>
                    <!-- Exclude some unnecessary files generated by the 
                        GWT compiler. -->
                    <packagingExcludes>WEB-INF/classes/VAADIN/gwt-unitCache/**,
                        WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**</packagingExcludes>
                </configuration>
            </plugin>
            <!-- The Jetty plugin allows us to easily test the development 
                build by running jetty:run on the command line. -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.plugin.version}</version>
                <configuration>
                    <scanIntervalSeconds>2</scanIntervalSeconds>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <configuration>
                    <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
                    <webappDirectory>${basedir}/target/classes/VAADIN/widgetsets</webappDirectory>
                    <draftCompile>false</draftCompile>
                    <compileReport>false</compileReport>
                    <style>OBF</style>
                    <strict>true</strict>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>update-theme</goal>
                            <!-- Comment out compile-theme goal to use on-the-fly theme compilation -->
                            <goal>compile-theme</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- TODO remove? -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.16</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
