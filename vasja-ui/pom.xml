<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>vasja</artifactId>
        <groupId>org.sanjosedelamazonas</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>vasja-ui</artifactId>
    <name>vasja-ui</name>
    <packaging>${packaging.type}</packaging>

    <dependencies>

        <!-- Project modules -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>vasja-widgetset</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>vasja-fonts</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>vasja-reports</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- /Project modules -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>sqljdbc4</artifactId>
            <version>4.2</version>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-server</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-push</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-themes</artifactId>
        </dependency>

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-spring</artifactId>
        </dependency>

        <dependency>
            <groupId>org.simplejavamail</groupId>
            <artifactId>simple-java-mail</artifactId>
            <version>8.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.simplejavamail</groupId>
            <artifactId>batch-module</artifactId>
            <version>8.0.0</version>
        </dependency>

        <!-- JASPER REPORTS -->

        <dependency>
            <groupId>net.sf.jasperreports</groupId>
            <artifactId>jasperreports</artifactId>
            <version>${jasper.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>javax.inject</artifactId>
                    <groupId>javax.inject</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--VAADIN Add-Ons-->

        <dependency>
            <groupId>org.sanjosedelamazonas</groupId>
            <artifactId>printapplet-addon</artifactId>
            <version>0.0.5</version>
        </dependency>

        <!-- Bean validation implementation -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.3.6.Final</version>
        </dependency>

        <!-- external libraries -->

        <!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>4.1.1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>4.1.1</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.5</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.11.2</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>webapp</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <packaging.type>war</packaging.type>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <!-- By attaching the classes to a separate JAR, we can
                                import them directly in the production overlay project, making it easier
                                to compile a separate widgetset for production mode. -->
                            <attachClasses>true</attachClasses>
                            <!-- Exclude some unnecessary files generated by the
                                GWT compiler. -->
                            <packagingExcludes>WEB-INF/classes/VAADIN/gwt-unitCache/**,
                                WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**
                            </packagingExcludes>
                        </configuration>
                    </plugin>
                    <!-- The Jetty plugin allows us to easily test the development
                        build by running jetty:run on the command line. -->
                   <!-- <plugin>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <version>${jetty.plugin.version}</version>
                        <configuration>
                            <scanIntervalSeconds>2</scanIntervalSeconds>
                        </configuration>
                    </plugin>-->
                    <plugin>
                        <groupId>com.vaadin</groupId>
                        <artifactId>vaadin-maven-plugin</artifactId>
                        <configuration>
                            <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
                            <webappDirectory>${basedir}/target/classes/VAADIN/widgetsets</webappDirectory>
                            <draftCompile>false</draftCompile>
                            <compileReport>false</compileReport>
                            <style>OBF</style>
                            <strict>true</strict>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>update-theme</goal>
                                    <!-- Comment out compile-theme goal to use on-the-fly theme compilation -->
                                    <goal>compile-theme</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- TODO remove? -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.16</version>
                        <executions>
                            <execution>
                                <id>default</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- Create the property $buildNumber holding the current Git revision -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>buildnumber-maven-plugin</artifactId>
                        <version>1.2</version>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>create</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <doCheck>false</doCheck>
                            <doUpdate>false</doUpdate>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifest>
                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                    <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                </manifest>
                                <manifestEntries>
                                    <Implementation-Title>${project.name}</Implementation-Title>
                                    <!-- buildNumber is produced at runtime by buildnumber-maven-plugin -->
                                    <Implementation-Version>${project.version} ${buildNumber}</Implementation-Version>
                                    <Build-Time>${maven.build.timestamp}</Build-Time>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>debug</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <packaging.type>war</packaging.type>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <jvmArguments>
                                -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005
                            </jvmArguments>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <!-- By attaching the classes to a separate JAR, we can
                                import them directly in the production overlay project, making it easier
                                to compile a separate widgetset for production mode. -->
                            <attachClasses>true</attachClasses>
                            <!-- Exclude some unnecessary files generated by the
                                GWT compiler. -->
                            <packagingExcludes>WEB-INF/classes/VAADIN/gwt-unitCache/**,
                                WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**
                            </packagingExcludes>
                        </configuration>
                    </plugin>
                    <!-- The Jetty plugin allows us to easily test the development
                        build by running jetty:run on the command line. -->
                    <plugin>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <version>${jetty.plugin.version}</version>
                        <configuration>
                            <scanIntervalSeconds>2</scanIntervalSeconds>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.vaadin</groupId>
                        <artifactId>vaadin-maven-plugin</artifactId>
                        <configuration>
                            <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
                            <webappDirectory>${basedir}/target/classes/VAADIN/widgetsets</webappDirectory>
                            <draftCompile>false</draftCompile>
                            <compileReport>false</compileReport>
                            <style>OBF</style>
                            <strict>true</strict>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>update-theme</goal>
                                    <!-- Comment out compile-theme goal to use on-the-fly theme compilation -->
                                    <goal>compile-theme</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- TODO remove? -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.16</version>
                        <executions>
                            <execution>
                                <id>default</id>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>


        <profile>
            <id>production</id>
            <properties>
                <packaging.type>jar</packaging.type>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <!-- By attaching the classes to a separate JAR, we can
                                import them directly in the production overlay project, making it easier
                                to compile a separate widgetset for production mode. -->
                            <attachClasses>true</attachClasses>
                            <!-- Exclude some unnecessary files generated by the
                                GWT compiler. -->
                            <packagingExcludes>WEB-INF/classes/VAADIN/gwt-unitCache/**,
                                WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**
                            </packagingExcludes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.vaadin</groupId>
                        <artifactId>vaadin-maven-plugin</artifactId>
                        <configuration>
                            <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
                            <webappDirectory>${basedir}/target/classes/VAADIN/widgetsets</webappDirectory>
                            <draftCompile>false</draftCompile>
                            <compileReport>false</compileReport>
                            <style>OBF</style>
                            <strict>true</strict>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>compile</phase>
                                <goals>
                                    <goal>update-theme</goal>
                                    <!-- Comment out compile-theme goal to use on-the-fly theme compilation -->
                                    <goal>compile-theme</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.7</version>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-classes</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/classes</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/webapp</directory>
                                            <excludes>
                                                <exclude>**/*.scss</exclude>
                                            </excludes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.coderplus.maven.plugins</groupId>
                        <artifactId>copy-rename-maven-plugin</artifactId>
                        <version>1.0</version>
                        <executions>
                            <execution>
                                <id>copy-file</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <sourceFile>${basedir}/src/main/resources/logback-dev.xml</sourceFile>
                                    <destinationFile>${basedir}/target/classes/logback.xml</destinationFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- Create the property $buildNumber holding the current Git revision -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>buildnumber-maven-plugin</artifactId>
                        <version>1.2</version>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>create</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <doCheck>false</doCheck>
                            <doUpdate>false</doUpdate>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifest>
                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                    <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                </manifest>
                                <manifestEntries>
                                    <Implementation-Title>${project.name}</Implementation-Title>
                                    <!-- buildNumber is produced at runtime by buildnumber-maven-plugin -->
                                    <Implementation-Version>${project.version} ${buildNumber}</Implementation-Version>
                                </manifestEntries>
                            </archive>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <executable>false</executable>
                            <layout>JAR</layout>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
